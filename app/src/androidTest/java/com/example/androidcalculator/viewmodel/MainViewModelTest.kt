package com.example.androidcalculator.viewmodel

import org.junit.Assert.*
import org.junit.Before
import org.junit.Test

class MainViewModelTest {
    private lateinit var viewModel: MainViewModel

    @Before
    fun setUp() {
        viewModel = MainViewModel()
    }

    @Test
    fun `数値入力`() {
        assertEquals(viewModel.displayNumber.value, "0")

        viewModel.onTapNumber("0")
        assertEquals(viewModel.displayNumber.value, "0")

        viewModel.onTapNumber("1")
        viewModel.onTapNumber("2")
        viewModel.onTapNumber("3")
        assertEquals(viewModel.displayNumber.value, "123")

        viewModel.onTapNumber("4")
        viewModel.onTapNumber("5")
        viewModel.onTapNumber("6")
        assertEquals(viewModel.displayNumber.value, "123,456")

        viewModel.onTapNumber("7")
        viewModel.onTapNumber("8")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("2")
        viewModel.onTapNumber("3")
        viewModel.onTapNumber("4")
        viewModel.onTapNumber("5")
        viewModel.onTapNumber("6")
        viewModel.onTapNumber("7")
        viewModel.onTapNumber("8")
        assertEquals(viewModel.displayNumber.value, "123,456,789,012,345,678")

        viewModel.onTapNumber("9")
        assertEquals(viewModel.displayNumber.value, "123,456,789,012,345,678")

        viewModel.onTapBackspace()
        assertEquals(viewModel.displayNumber.value, "12,345,678,901,234,567")

        viewModel.onTapClear()
        assertEquals(viewModel.displayNumber.value, "0")

        viewModel.onTapBackspace()
        assertEquals(viewModel.displayNumber.value, "0")
    }

    @Test
    fun `演算`() {
        // 加算
        assertEquals(viewModel.displayNumber.value, "0")

        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapOperator(MainViewModel.CalculateKind.Plus)
        viewModel.onTapNumber("2")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "300")

        viewModel.onTapOperator(MainViewModel.CalculateKind.Plus)
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "1,000,300")

        viewModel.onTapOperator(MainViewModel.CalculateKind.Plus)
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "999,999,999,999,999,999")

        // 減算
        viewModel.onTapOperator(MainViewModel.CalculateKind.Minus)
        viewModel.onTapNumber("9")
        assertEquals(viewModel.displayNumber.value, "9")
        viewModel.onTapNumber("9")
        assertEquals(viewModel.displayNumber.value, "99")
        viewModel.onTapNumber("9")
        assertEquals(viewModel.displayNumber.value, "999")
        viewModel.onTapNumber("9")
        assertEquals(viewModel.displayNumber.value, "9,999")
        viewModel.onTapNumber("9")
        assertEquals(viewModel.displayNumber.value, "99,999")
        viewModel.onTapNumber("9")
        assertEquals(viewModel.displayNumber.value, "999,999")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "999,999,999,999,000,000")

        viewModel.onTapOperator(MainViewModel.CalculateKind.Minus)
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("1")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "-1")

        viewModel.onTapOperator(MainViewModel.CalculateKind.Minus)
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("9")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "-999,999,999,999,999,999")

        // 乗算
        viewModel.onTapClear()
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapOperator(MainViewModel.CalculateKind.Times)
        viewModel.onTapNumber("3")
        viewModel.onTapNumber("2")
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "3,210,000")

        viewModel.onTapOperator(MainViewModel.CalculateKind.Times)
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "999,999,999,999,999,999")

        viewModel.onTapClear()
        viewModel.onTapOperator(MainViewModel.CalculateKind.Minus)
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "-100")
        viewModel.onTapOperator(MainViewModel.CalculateKind.Times)
        viewModel.onTapNumber("3")
        viewModel.onTapNumber("2")
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "-321,000")

        viewModel.onTapOperator(MainViewModel.CalculateKind.Times)
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "-999,999,999,999,999,999")

        // 除算
        viewModel.onTapClear()
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapOperator(MainViewModel.CalculateKind.Divide)
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "100")

        viewModel.onTapOperator(MainViewModel.CalculateKind.Divide)
        viewModel.onTapNumber("9")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "1")

        viewModel.onTapOperator(MainViewModel.CalculateKind.Minus)
        viewModel.onTapNumber("2")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "-1")
        viewModel.onTapOperator(MainViewModel.CalculateKind.Times)
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "-1,000")

        viewModel.onTapOperator(MainViewModel.CalculateKind.Divide)
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapNumber("0")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "-1")

    }

    @Test
    fun `異常系`() {
        assertEquals(viewModel.displayNumber.value, "0")

        // 入力中にクリア
        viewModel.onTapNumber("1")
        viewModel.onTapNumber("2")
        viewModel.onTapNumber("3")
        viewModel.onTapClear()
        viewModel.onTapNumber("4")
        viewModel.onTapNumber("5")
        viewModel.onTapNumber("6")
        assertEquals(viewModel.displayNumber.value, "456")

        // 入力中に演算子ボタン押下
        viewModel.onTapOperator(MainViewModel.CalculateKind.Plus)
        assertEquals(viewModel.displayNumber.value, "456")
        viewModel.onTapOperator(MainViewModel.CalculateKind.Times)
        assertEquals(viewModel.displayNumber.value, "456")
        viewModel.onTapOperator(MainViewModel.CalculateKind.Minus)
        assertEquals(viewModel.displayNumber.value, "456")
        viewModel.onTapNumber("9")
        assertEquals(viewModel.displayNumber.value, "9")
        viewModel.onTapOperator(MainViewModel.CalculateKind.Divide)
        assertEquals(viewModel.displayNumber.value, "9")
        viewModel.onTapOperator(MainViewModel.CalculateKind.Minus)
        viewModel.onTapNumber("4")
        assertEquals(viewModel.displayNumber.value, "4")
        viewModel.onTapNumber("5")
        assertEquals(viewModel.displayNumber.value, "45")
        viewModel.onTapNumber("7")
        assertEquals(viewModel.displayNumber.value, "457")
        viewModel.onTapEqual()
        assertEquals(viewModel.displayNumber.value, "-1")

        // 計算結果でバックスペースボタン押下
        viewModel.onTapBackspace()
        assertEquals(viewModel.displayNumber.value, "-1")
    }
}